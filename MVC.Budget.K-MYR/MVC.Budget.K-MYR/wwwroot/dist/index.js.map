{"version":3,"file":"index.js","mappings":";;;;;;;;;;;;;;;;;;AAAA,CAAQ;AACR;AACA,gBAAgB,aAAa,QAAQ,4UAAmE;AACxG,eAAe,CAAC;AAChB;AACA;AACA;AACA,SAAS;AACT,MAAM;AACN;AACA;AACA;AACA;AACA;AACO;AACP;AACA,gBAAgB,8CAA8C,QAAQ,8TAAmD;AACzH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACO;AACP;AACA,gBAAgB,WAAW,QAAQ,8TAAgE;AACnG;AACA,qGAAqG,eAAe;AACpH;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACO;AACP;AACA,gBAAgB,QAAQ,QAAQ,2TAA6D;AAC7F;AACA,sFAAsF,eAAe;AACrG;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACO;AACP;AACA,gBAAgB,aAAa,QAAQ,kVAAkE;AACvG;AACA;AACA;AACA,uBAAuB,CAAC;AACxB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,uBAAuB,CAAC;AACxB;AACA;AACA;AACA,iBAAiB;AACjB;AACA,MAAM;AACN;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACxFA,CAAwC;AACmB;AACT;AACvB;;;;;;;;;;;;;;;;ACH3B,CAAkG;AACvE;AAC3B;AACA;AACA;AACA,0BAA0B,qEAAmB;AAC7C,eAAe,uEAAqB;AACpC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,YAAY,CAAC;AACb;AACA;AACA;AACA,KAAK;AACL,EAAE;AACF,sBAAsB,kEAAgB;AACtC;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD,gEAAgE,gBAAgB;AAChF,CAAC;AACD;AACA;AACA;AACA,sCAAsC,cAAc;AACpD;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,UAAU;AACV,8CAA8C,gBAAgB;AAC9D;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;;;;;;;;;;;ACtDA","sources":["webpack://thebudgeteer/../../../../../../C\u0000#/GithubRepositories/CodeReviews.MVC.Budget/MVC.Budget.K-MYR/MVC.Budget.K-MYR/ClientApp/src/js/asyncComponents.js","webpack://thebudgeteer/../../../../../../C\u0000#/GithubRepositories/CodeReviews.MVC.Budget/MVC.Budget.K-MYR/MVC.Budget.K-MYR/ClientApp/src/js/index-entry.js","webpack://thebudgeteer/../../../../../../C\u0000#/GithubRepositories/CodeReviews.MVC.Budget/MVC.Budget.K-MYR/MVC.Budget.K-MYR/ClientApp/src/js/index.js","webpack://thebudgeteer/../../../../../../C\u0000#/GithubRepositories/CodeReviews.MVC.Budget/MVC.Budget.K-MYR/MVC.Budget.K-MYR/ClientApp/src/scss/site.scss"],"sourcesContent":["﻿export async function getCountrySelect(id) {\r\n    try {\r\n        const { default: _ } = await import(/* webpackChunkName: \"countrySelect\" */ 'country-select-js');\r\n        return $(id).countrySelect({\r\n            defaultCountry: window.userLocale.region.toLowerCase(),\r\n            preferredCountries: [\"at\", \"us\"],\r\n            responsiveDropdown: true\r\n        });\r\n    } catch (error) {\r\n        console.error('Error loading Country Select:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function importChartDefaults() {\r\n    try {\r\n        const { Chart, LinearScale, Legend, Tooltip, Colors } = await import(/* webpackChunkName: \"chartJS\" */'chart.js');\r\n\r\n        Chart.register(\r\n            LinearScale, Legend, Tooltip, Colors,\r\n            {\r\n                id: \"emptypiechart\",\r\n                beforeInit: function (chart) {\r\n                    chart.data.datasets[0].backgroundColor.push('#d2dee2');\r\n                    chart.data.datasets[0].data.push(Number.MIN_VALUE);\r\n                }\r\n            }\r\n        );\r\n\r\n        Chart.defaults.color = '#ffffff';\r\n        Chart.defaults.scales.linear.min = 0;\r\n        Chart.defaults.plugins.legend.labels.filter = (item) => item.text !== undefined;\r\n        Chart.defaults.plugins.tooltip.filter = (item) => item.label !== \"\"; \r\n    } catch (error) {\r\n        console.error('Error loading Chart.js defaults:', error);\r\n        throw error; \r\n    }\r\n}\r\n\r\nexport async function importBootstrapCollapses() {\r\n    try {\r\n        const { Collapse } = await import(/* webpackChunkName: \"bootstrap-collapses\" */'bootstrap');\r\n        let collapseElements = document.querySelectorAll('.collapse')\r\n        let collapses = [...collapseElements].map(collapseElement => new Collapse(collapseElement, { toggle: false }))\r\n\r\n        return collapses;\r\n    } catch (error) {\r\n        console.error('Error loading Bootstrap modals:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function importBootstrapModals() {\r\n    try {\r\n        const { Modal } = await import(/* webpackChunkName: \"bootstrap-modals\" */'bootstrap');\r\n        let modalElements = document.querySelectorAll('.modal')\r\n        let modals = [...modalElements].map(modalElement => new Modal(modalElement, { toggle: false }))\r\n\r\n        return modals;\r\n    } catch (error) {\r\n        console.error('Error loading Bootstrap modals:', error);\r\n        throw error; \r\n    }\r\n}\r\n\r\nexport async function getDatePicker(id, mode) {\r\n    try {\r\n        const { default: _ } = await import(/* webpackChunkName: \"datepicker\" */'bootstrap-datepicker');\r\n\r\n        switch (mode) {\r\n            case \"month\":\r\n                return $(id).datepicker({\r\n                    format: 'MM yyyy',\r\n                    startView: 'months',\r\n                    minViewMode: 'months',\r\n                    autoclose: true\r\n                })\r\n            default:\r\n                return $(id).datepicker({\r\n                    format: 'yyyy',\r\n                    minViewMode: 'years',\r\n                    autoclose: true\r\n                });\r\n        }\r\n    } catch (error) {\r\n        console.error('Error loading Datepicker:', error);\r\n        throw error; \r\n    }    \r\n}","﻿import 'jquery-validation-unobtrusive';\r\nimport 'country-select-js/build/css/countrySelect.min.css';\r\nimport 'bootstrap-icons/font/bootstrap-icons.css';\r\nimport '../scss/site.scss';\r\nimport './index';","﻿import { getCountrySelect, importChartDefaults,  importBootstrapModals} from './asyncComponents';\r\nimport 'jquery-validation';\r\n\r\nconst fiscalPlanApi = \"https://localhost:7246/api/FiscalPlan\";\r\n\r\nconst chartDefaultsTask = importChartDefaults();\r\nconst modals = importBootstrapModals().then((modalsArray) => {\r\n    let modal = modalsArray.find(m => m._element.id == \"addFiscalPlan-modal\");\r\n    document.getElementById(\"addFiscalPlan-card\").addEventListener('click', function () {\r\n        modal.show();\r\n    });\r\n    document.getElementById(\"addFiscalPlan-form\").addEventListener('submit', async function (event) {\r\n        event.preventDefault();\r\n        if ($(this).valid()) {\r\n            modal.hide();\r\n            await addFiscalPlan(new FormData(this));\r\n        }\r\n    })\r\n });\r\nconst countrySelect = getCountrySelect(\"#country\");\r\n\r\n\r\ndocument.getElementById(\"country-form\").addEventListener('submit', function (event) {\r\n    event.preventDefault();\r\n});\r\n\r\n$('.fiscalPlan-card').on('click', function (event) {\r\n    window.location.href = `https://localhost:7246/FiscalPlan/${this.dataset.id}`;\r\n});\r\n\r\nasync function addFiscalPlan(data) {\r\n    try {\r\n        var response = await fetch(`${fiscalPlanApi}`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"RequestVerificationToken\": data.get('__RequestVerificationToken')\r\n            },\r\n            body: JSON.stringify({\r\n                Name: data.get(\"Name\"),\r\n            })\r\n        });\r\n\r\n        if (response.ok) {\r\n            return true;\r\n        } else {\r\n            console.error(`HTTP Post Error: ${response.status}`);\r\n            return false;\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        return false;\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport {};"],"names":[],"sourceRoot":""}