{"version":3,"file":"category.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,CAA4B;AACW;AACvC;AACwC;AACsB;AACH;AACT;AACmB;AAC1C;AAC3B;AACmB;AACI;;;;;;;;;;;;;;;;;;ACXvB,CAAkF;AACjB;AACjE,2CAAK,UAAU,wDAAkB,EAAE,gDAAU;AAC7C;AACA,0BAA0B,qEAAmB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,CAAC;AAC7B,+BAA+B,CAAC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,0EAAwB;AAChD;AACA,yBAAyB,0EAAwB;AACjD;AACA,QAAQ,CAAC;AACT;AACA,+BAA+B,CAAC;AAChC;AACA;AACA,gCAAgC,CAAC;AACjC;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,CAAC;AACD;AACA,QAAQ,CAAC;AACT;AACA;AACA;AACA;AACA,uCAAuC,aAAa;AACpD;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA,QAAQ,CAAC;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,gBAAgB,6BAA6B,QAAQ,2SAAwE;AAC7H;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA","sources":["webpack://thebudgeteer/../../../../../C\u0000# Academy Repos/CodeReviews.MVC.Budget/MVC.Budget.K-MYR/MVC.Budget.K-MYR/ClientApp/src/js/category-entry.js","webpack://thebudgeteer/../../../../../C\u0000# Academy Repos/CodeReviews.MVC.Budget/MVC.Budget.K-MYR/MVC.Budget.K-MYR/ClientApp/src/js/category.js"],"sourcesContent":["﻿import 'jquery-validation';\r\nimport 'jquery-validation-unobtrusive';\r\n\r\nimport '../scss/bootstrap-imports.scss';\r\nimport 'datatables.net-bs5/css/dataTables.bootstrap5.min.css';\r\nimport 'country-select-js/build/css/countrySelect.min.css';\r\nimport 'bootstrap-icons/font/bootstrap-icons.css';\r\nimport 'bootstrap-datepicker/dist/css/bootstrap-datepicker3.min.css';\r\nimport '../scss/site.scss';\r\n\r\nimport './site.js';\r\nimport './category.js';\r\n","﻿import { importChartDefaults, importBootstrapCollapses} from './asyncComponents';\r\nimport { ArcElement, Chart, DoughnutController } from 'chart.js';\r\nChart.register(DoughnutController, ArcElement);\r\n\r\nconst chartDefaultsTask = importChartDefaults();\r\n\r\nconst currentDate = new Date();\r\nconst categoryId = document.getElementById('category_Id');\r\n\r\nconst categoryDashboard = await getCategoryDashboard(categoryId.value, currentDate, JSON.parse(categoryId.dataset.object));\r\n\r\nconst transactionsAPI = \"https://localhost:7246/api/Transactions\";\r\nconst addTransactionModal = $(\"#add-transaction-modal\");\r\nconst updateTransactionModal = $(\"#updateTransaction-modal\");\r\nconst transactionModalLabel = updateTransactionModal.find(\"#updateTransaction-label\");\r\nconst transactionModalId = updateTransactionModal.find(\"#updateTransaction_id\");\r\nconst transactionModalTitle = updateTransactionModal.find(\"#updateTransaction_title\");\r\nconst transactionModalAmount = updateTransactionModal.find(\"#updateTransaction_amount\");\r\nconst transactionModalCategoryId = updateTransactionModal.find(\"#updateTransaction_categoryId\");\r\nconst transactionModalDateTime = updateTransactionModal.find(\"#updateTransaction_dateTime\");\r\nconst transactionModalEvaluated = updateTransactionModal.find(\"#updateTransaction_evaluated\");\r\nconst transactionModalEvaluatedIsHappy = updateTransactionModal.find(\"#updateTransaction_evaluatedIsHappy\");\r\nconst transactionModalEvaluatedIsNecessary = updateTransactionModal.find(\"#updateTransaction_evaluatedIsNecessary\");\r\n\r\nconst collapses = await importBootstrapCollapses();\r\n\r\nconst collapsesPromise = importBootstrapCollapses()\r\n    .then(() => {\r\n        $('.accordion-head').on('click', function (event) {\r\n            if (!event.target.classList.contains('add-category-icon')) {\r\n                let collapse = $(this).next();\r\n                if (!collapse[0].classList.contains('collapsing')) {\r\n                    collapse.collapse('toggle');\r\n                    let caret = $('.accordion-caret', this)[0];\r\n                    caret.classList.toggle('rotate');\r\n                }               \r\n            }\r\n        });\r\n    });\r\n\r\n$('#add-transaction-form').on(\"submit\", async function (event) {\r\n    event.preventDefault();\r\n    if ($(this).valid()) {\r\n        addTransactionModal.modal('hide');\r\n        const start = performance.now();\r\n        await addTransaction(new FormData(this));\r\n        const end = performance.now();\r\n        console.log(`Execution time: ${end - start} ms`);\r\n    }\r\n});\r\n\r\n$('#update-transaction-form').on(\"submit\", async function (event) {\r\n    event.preventDefault();\r\n    if ($(this).valid()) {\r\n        updateTransactionModal.modal('hide');\r\n        await updateTransaction(new FormData(this));\r\n    }\r\n});\r\n\r\nasync function getCategoryDashboard(id, date, data) {\r\n    try {\r\n        const { default: CategoryDashboard } = await import(/* webpackChunkName: \"categoryDashboard\"*/ './categoryDashboard');\r\n        await chartDefaultsTask;\r\n\r\n        return new CategoryDashboard(id, date, data);\r\n\r\n    } catch (error) {\r\n        console.error('Error loading category dashboard:', error);\r\n        throw error;\r\n    }\r\n} \r\n"],"names":[],"sourceRoot":""}