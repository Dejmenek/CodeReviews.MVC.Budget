{"version":3,"file":"async-reevaluationDashboard.js","mappings":";;;;;;;;;;;;;;;;AAAA,CAAgF;AAC1C;AACtC;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,GAAG;AACvE;AACA;AACA,kCAAkC,gEAA0B;AAC5D,QAAQ,mDAAU;AAClB;AACA;AACA,4BAA4B,CAAC;AAC7B;AACA;AACA;AACA;AACA,6DAA6D,WAAW;AACxE;AACA;AACA;AACA;AACA;AACA,wCAAwC,gEAA0B;AAClE;AACA;AACA;AACA,kBAAkB;AAClB;AACA,oBAAoB,mDAAU;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,CAAC;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mDAAU;AAC1B;AACA;AACA;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD;AACA,oCAAoC,kCAAkC;AACtE;AACA,kFAAkF,eAAe;AACjG;AACA,gFAAgF,eAAe;AAC/F;AACA;AACA;AACA;AACA;AACA,mCAAmC,CAAC;AACpC;AACA,gCAAgC,yBAAyB;AACzD;AACA;AACA;AACA;AACA;AACA,8EAA8E,GAAG;AACjF;AACA,4EAA4E,GAAG;AAC/E;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,eAAe;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,eAAe;AACxD;AACA;AACA;AACA,6CAA6C,eAAe;AAC5D;AACA;AACA;AACA,4DAA4D,eAAe;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,eAAe;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,eAAe;AAC5D;AACA;AACA;AACA;AACA;AACA,kDAAkD,eAAe;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,eAAe;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,eAAe;AACpE;AACA;AACA;AACA;AACA;AACA,0DAA0D,eAAe;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,eAAe;AACtE;AACA;AACA;AACA;AACA;AACA,4DAA4D,eAAe;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,iBAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA","sources":["webpack://thebudgeteer/../../../../../../C\u0000#/GithubRepositories/CodeReviews.MVC.Budget/MVC.Budget.K-MYR/MVC.Budget.K-MYR/ClientApp/src/js/reevaluationDashboard.js"],"sourcesContent":["ï»¿import { getUnevaluatedTransactions, patchTransactionEvaluation } from './api';\r\nimport messageBox from './messageBox';\r\n\r\nexport default class ReevaluationDashboard {\r\n    #data;\r\n    #isLoading;\r\n    #container;\r\n    #infoDiv;\r\n    #antiforgeryToken\r\n\r\n    constructor(token) {\r\n        this.#antiforgeryToken = token;\r\n        this.#data = null;   \r\n        this.#init();\r\n    }\r\n\r\n    async #init() {\r\n        try {\r\n            this.#isLoading = true;\r\n            this.#container = document.getElementById('reevalCategories-container');\r\n            this.#infoDiv = document.getElementById('reevalInfo');\r\n            this.#attachEventHandlers();  \r\n            this.#toggleReevaluationInfo();\r\n           \r\n        } finally {\r\n            this.#isLoading = false;\r\n            this.formatDashboard();\r\n        }\r\n    }\r\n\r\n    async #reevaluateTransaction(form) {\r\n        var formData = new FormData(form);        \r\n        var id = formData.get('Id');\r\n        var element = document.getElementById(`reeval_transaction_${id}`);\r\n        var previousIsHappy = element.dataset.ishappy === 'true';\r\n        var previousIsNecessary = element.dataset.isnecessary === 'true';\r\n        var responsePatch = await patchTransactionEvaluation(formData, previousIsHappy, previousIsNecessary, this.#antiforgeryToken);\r\n        messageBox.addAndShow(responsePatch.message, responsePatch.isSuccess ? '#check-icon' : '#cross-icon');\r\n        \r\n        if (responsePatch.isSuccess) {\r\n            let accordion = $(form).closest('.accordion');\r\n            element.removeEventListener('submit', this.#onReevaluate);\r\n            element.remove();\r\n            let accordionBody = accordion.find('.accordion-body')[0];\r\n            let categoryId = parseInt(accordion[0].dataset.categoryid);\r\n            let spinner = document.getElementById(`spinner_${categoryId}`);\r\n\r\n            if (accordionBody.childElementCount < 6 && spinner) {\r\n                spinner.classList.remove('invisible');\r\n                let lastTransaction = accordionBody.children[accordionBody.childElementCount - 2];\r\n                let lastDate = lastTransaction.dataset.date;\r\n                let responseGet = await getUnevaluatedTransactions(categoryId, lastDate, parseInt(lastTransaction.dataset.id), 6);\r\n                if (responseGet.isSuccess && responseGet.data.length > 0) {\r\n                    this.#createTransactionElements(responseGet.data, accordionBody, spinner);\r\n                    spinner.classList.add('invisible');\r\n                } else {\r\n                    spinner.remove();\r\n                    messageBox.addAndShow(responseGet.message, responseGet.isSuccess ? '#check-icon' : '#cross-icon');                  \r\n                }                 \r\n            }\r\n\r\n            if (accordionBody.childElementCount === 0) {\r\n                accordion.remove();\r\n            }\r\n            this.#toggleReevaluationInfo();\r\n        }\r\n              \r\n    }\r\n\r\n    #attachEventHandlers() {\r\n        $('.reevaluate-transaction-form').on('submit', this.#onReevaluate.bind(this));\r\n    }\r\n\r\n    #onReevaluate(event) {\r\n        event.preventDefault();\r\n        this.#reevaluateTransaction(event.target);\r\n    }\r\n\r\n    formatDashboard() {\r\n        try {\r\n            if (this.#isLoading) {\r\n                messageBox.addAndShow('The dashboard is loading...', '#info-icon');\r\n                return false;\r\n            }\r\n            this.#isLoading = true;\r\n\r\n            if (this.#data) {\r\n                for (let i = 0; i < this.#data.length; i++) {\r\n                    let category = this.#data[i];\r\n                    for (let i = 0; i < category.transactions.length; i++) {\r\n                        let transaction = category.transactions[i];\r\n                        let element = document.getElementById(`transaction_date_${transaction.id}`);\r\n                        element.textContent = new Date(transaction.dateTime).toLocaleDateString(window.userLocale);\r\n                        element = document.getElementById(`transaction_amount_${transaction.id}`);\r\n                        element.textContent = window.userNumberFormat.format(transaction.amount);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                let transactions = $('.transaction-body', this.#container);\r\n\r\n                for (let i = 0; i < transactions.length; i++) {\r\n                    let transaction = transactions[i];\r\n                    let id = parseInt(transaction.dataset.id);\r\n                    let date = new Date(transaction.dataset.date);\r\n                    let amount = parseFloat(transaction.dataset.amount);\r\n                    \r\n                    let element = document.getElementById(`transaction_date_${id}`);\r\n                    element.textContent = date.toLocaleDateString(window.userLocale);\r\n                    element = document.getElementById(`transaction_amount_${id}`);\r\n                    element.textContent = window.userNumberFormat.format(amount);                    \r\n                }\r\n            }\r\n\r\n        } finally {\r\n            this.#isLoading = false;\r\n        }\r\n    }\r\n\r\n    #createTransactionElement(transaction) {\r\n        var transactionBody = document.createElement('div');\r\n\r\n        transactionBody.id = `reeval_transaction_${transaction.id}`;\r\n        transactionBody.className = 'transaction-body';\r\n        transactionBody.setAttribute('data-id', transaction.id);\r\n        transactionBody.setAttribute('data-ishappy', transaction.isHappy);\r\n        transactionBody.setAttribute('data-isnecessary', transaction.isNecessary);\r\n        transactionBody.setAttribute('data-amount', transaction.amount);\r\n        transactionBody.setAttribute('data-date', transaction.dateTime);\r\n\r\n        var titleDiv = document.createElement('div');\r\n        titleDiv.textContent = decodeURIComponent(transaction.title);\r\n\r\n        var dateDiv = document.createElement('div');\r\n        dateDiv.id = `transaction_date_${transaction.id}`;\r\n        dateDiv.textContent = new Date(transaction.dateTime).toLocaleDateString(window.userLocale);\r\n\r\n        var amountDiv = document.createElement('div');\r\n        amountDiv.id = `transaction_amount_${transaction.id}`;\r\n        amountDiv.textContent = window.userNumberFormat.format(transaction.amount);\r\n\r\n        var transactionForm = document.createElement('form');\r\n        transactionForm.id = `reevaluate-transaction-form_${transaction.id}`;\r\n        transactionForm.setAttribute('novalidate', 'novalidate');\r\n        transactionForm.addEventListener('submit', this.#onReevaluate.bind(this));\r\n\r\n        var hiddenInput = document.createElement('input');\r\n        hiddenInput.type = 'hidden';\r\n        hiddenInput.value = transaction.id;\r\n        hiddenInput.id = `reeval_transaction_${transaction.id}`;\r\n        hiddenInput.name = 'Id';\r\n\r\n        var wrapperDiv = document.createElement('div');\r\n        wrapperDiv.className = 'reevalIconsContainer';\r\n\r\n        var innerWrapper1 = document.createElement('div');\r\n        innerWrapper1.className = 'd-flex align-items-center';\r\n\r\n        var isHappyTrueInput = document.createElement('input');\r\n        isHappyTrueInput.type = 'radio';\r\n        isHappyTrueInput.value = 'true';\r\n        isHappyTrueInput.id = `isHappyTrue_${transaction.id}`;\r\n        isHappyTrueInput.className = 'iconRadioButton';\r\n        isHappyTrueInput.name = 'IsHappy';\r\n\r\n        var isHappyTrueLabel = document.createElement('label');\r\n        isHappyTrueLabel.className = 'reevalIconLabel';\r\n        isHappyTrueLabel.htmlFor = `isHappyTrue_${transaction.id}`;\r\n\r\n        var isHappySvgContainer = document.createElement('div');\r\n        isHappySvgContainer.className = 'reevalIconContainer';\r\n\r\n        var isHappyImg = document.createElement('img');\r\n        isHappyImg.src = '/dist/img/happy-emote.svg';\r\n        isHappyImg.height = 25;\r\n        isHappyImg.width = 25;\r\n        isHappyImg.className = 'reevalIcon';\r\n\r\n        var isHappyFalseInput = document.createElement('input');\r\n        isHappyFalseInput.type = 'radio';\r\n        isHappyFalseInput.value = 'false';\r\n        isHappyFalseInput.id = `isHappyFalse_${transaction.id}`;\r\n        isHappyFalseInput.className = 'iconRadioButton';\r\n        isHappyFalseInput.checked = true;\r\n        isHappyFalseInput.name = 'IsHappy';\r\n\r\n        var isHappyFalseLabel = document.createElement('label');\r\n        isHappyFalseLabel.className = 'reevalIconLabel';\r\n        isHappyFalseLabel.htmlFor = `isHappyFalse_${transaction.id}`;\r\n\r\n        var isUnhappySvgContainer = document.createElement('div');\r\n        isUnhappySvgContainer.className = 'reevalIconContainer';\r\n\r\n        var isUnhappyImg = document.createElement('img');\r\n        isUnhappyImg.src = '/dist/img/sad-emote.svg';\r\n        isUnhappyImg.height = 25;\r\n        isUnhappyImg.width = 25;\r\n        isUnhappyImg.className = 'reevalIcon';\r\n\r\n        var innerWrapper2 = document.createElement('div');\r\n        innerWrapper2.className = 'd-flex align-items-center';\r\n\r\n        var isNecessaryTrueInput = document.createElement('input');\r\n        isNecessaryTrueInput.type = 'radio';\r\n        isNecessaryTrueInput.value = 'true';\r\n        isNecessaryTrueInput.id = `isNecessaryTrue_${transaction.id}`;\r\n        isNecessaryTrueInput.className = 'iconRadioButton';\r\n        isNecessaryTrueInput.name = 'IsNecessary';\r\n\r\n        var isNecessaryTrueLabel = document.createElement('label');\r\n        isNecessaryTrueLabel.className = 'reevalIconLabel';\r\n        isNecessaryTrueLabel.htmlFor = `isNecessaryTrue_${transaction.id}`;\r\n\r\n        var isNecessarySvgContainer = document.createElement('div');\r\n        isNecessarySvgContainer.className = 'reevalIconContainer';\r\n\r\n        var isNecessaryImg = document.createElement('img');\r\n        isNecessaryImg.src = '/dist/img/chart-growth.svg';\r\n        isNecessaryImg.height = 25;\r\n        isNecessaryImg.width = 25;\r\n        isNecessaryImg.className = 'reevalIcon';\r\n\r\n        var isNecessaryFalseInput = document.createElement('input');\r\n        isNecessaryFalseInput.type = 'radio';\r\n        isNecessaryFalseInput.value = 'false';\r\n        isNecessaryFalseInput.checked = true;\r\n        isNecessaryFalseInput.id = `isNecessaryFalse_${transaction.id}`;\r\n        isNecessaryFalseInput.className = 'iconRadioButton';\r\n        isNecessaryFalseInput.name = 'IsNecessary';\r\n\r\n        var isNecessaryFalseLabel = document.createElement('label');\r\n        isNecessaryFalseLabel.className = 'reevalIconLabel';\r\n        isNecessaryFalseLabel.htmlFor = `isNecessaryFalse_${transaction.id}`;\r\n\r\n        var isUnnecessarySvgContainer = document.createElement('div');\r\n        isUnnecessarySvgContainer.className = 'reevalIconContainer';\r\n\r\n        var isUnnecessaryImg = document.createElement('img');\r\n        isUnnecessaryImg.src = '/dist/img/chart-decrease.svg';\r\n        isUnnecessaryImg.height = 25;\r\n        isUnnecessaryImg.width = 25;\r\n        isUnnecessaryImg.className = 'reevalIcon';\r\n\r\n        var buttonDiv = document.createElement('div');\r\n\r\n        var submitButton = document.createElement('button');\r\n        submitButton.className = 'reeval-submit-button';\r\n        submitButton.type = 'submit';\r\n\r\n        var submitButtonSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\r\n        submitButtonSvg.setAttribute('class', 'reeval-submit-svg');\r\n        submitButtonSvg.setAttribute('viewBox', '0 0 24 24');\r\n        submitButtonSvg.setAttribute('height', '40');\r\n        submitButtonSvg.setAttribute('width', '40');\r\n        submitButtonSvg.innerHTML = `<circle cx=\"12\" cy=\"12\" r=\"11.5\" stroke-width=\"1\"></circle>\r\n                            <path d=\"M8.5 12.5L10.5 14.5L15.5 9.5\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>`;\r\n\r\n        isHappySvgContainer.appendChild(isHappyImg);\r\n        isHappyTrueLabel.appendChild(isHappySvgContainer);\r\n\r\n        isUnhappySvgContainer.appendChild(isUnhappyImg);\r\n        isHappyFalseLabel.appendChild(isUnhappySvgContainer);\r\n\r\n        innerWrapper1.appendChild(isHappyTrueInput);\r\n        innerWrapper1.appendChild(isHappyTrueLabel);\r\n        innerWrapper1.appendChild(isHappyFalseInput);\r\n        innerWrapper1.appendChild(isHappyFalseLabel);\r\n\r\n        isNecessarySvgContainer.appendChild(isNecessaryImg);\r\n        isNecessaryTrueLabel.appendChild(isNecessarySvgContainer);\r\n\r\n        isUnnecessarySvgContainer.appendChild(isUnnecessaryImg);\r\n        isNecessaryFalseLabel.appendChild(isUnnecessarySvgContainer);\r\n\r\n        innerWrapper2.appendChild(isNecessaryTrueInput);\r\n        innerWrapper2.appendChild(isNecessaryTrueLabel);\r\n        innerWrapper2.appendChild(isNecessaryFalseInput);\r\n        innerWrapper2.appendChild(isNecessaryFalseLabel);\r\n\r\n        submitButton.appendChild(submitButtonSvg);\r\n        buttonDiv.appendChild(submitButton);\r\n\r\n        wrapperDiv.appendChild(innerWrapper1);\r\n        wrapperDiv.appendChild(innerWrapper2);\r\n        wrapperDiv.appendChild(buttonDiv);\r\n\r\n        transactionForm.appendChild(hiddenInput);\r\n        transactionForm.appendChild(wrapperDiv);\r\n\r\n        transactionBody.appendChild(titleDiv);\r\n        transactionBody.appendChild(dateDiv);\r\n        transactionBody.appendChild(amountDiv);\r\n        transactionBody.appendChild(transactionForm);\r\n\r\n        return transactionBody;\r\n    }   \r\n\r\n    #createTransactionElements(data, accordion, beforeElement) { \r\n        if (data && accordion) {\r\n            let frag = document.createDocumentFragment();\r\n\r\n            for (let i = 0; i < data.length; i++) {\r\n                frag.appendChild(this.#createTransactionElement(data[i]));\r\n\r\n                if (beforeElement) {\r\n                    accordion.insertBefore(frag, beforeElement);\r\n                }\r\n                else {\r\n                    accordion.appendChild(frag);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    #toggleReevaluationInfo() {\r\n        if (this.#container.childElementCount == 0) {\r\n            this.#infoDiv.style.display = 'block';\r\n        } else {\r\n            this.#infoDiv.style.display = 'none';\r\n        }\r\n    }\r\n}\r\n"],"names":[],"sourceRoot":""}