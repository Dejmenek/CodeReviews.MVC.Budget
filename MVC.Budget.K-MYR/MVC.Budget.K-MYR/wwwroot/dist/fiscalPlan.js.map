{"version":3,"file":"fiscalPlan.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,sCAAsC,cAAc,GAAG,GAAG,eAAe,+CAA+C;AACxH;AACA,SAAS;AACT;AACA;AACA;AACA,UAAU;AACV,6CAA6C,gBAAgB;AAC7D;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACO;AACP;AACA,sCAAsC,cAAc,GAAG,GAAG,GAAG,mBAAmB;AAChF;AACA,SAAS;AACT;AACA;AACA;AACA,UAAU;AACV,6CAA6C,gBAAgB;AAC7D;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACO;AACP;AACA,sCAAsC,gBAAgB;AACtD;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,SAAS;AACT;AACA;AACA;AACA,UAAU;AACV,8CAA8C,gBAAgB;AAC9D;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACO;AACP;AACA,sCAAsC,uEAAuE;AAC7G;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,UAAU;AACV,8CAA8C,gBAAgB;AAC9D;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT,sCAAsC,uEAAuE,GAAG,GAAG,GAAG,YAAY;AAClI;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,UAAU;AACV,8CAA8C,gBAAgB;AAC9D;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACO;AACP;AACA,sCAAsC,uDAAuD,GAAG,GAAG;AACnG;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,UAAU;AACV,gDAAgD,gBAAgB;AAChE;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,gBAAgB,GAAG,aAAa;AACtE;AACA,SAAS;AACT;AACA;AACA;AACA,UAAU;AACV,6CAA6C,gBAAgB;AAC7D;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,SAAS;AACT,sCAAsC,qBAAqB,wBAAwB,YAAY;AAC/F;AACA,SAAS;AACT;AACA;AACA;AACA,UAAU;AACV,6CAA6C,gBAAgB;AAC7D;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,sCAAsC,gBAAgB,GAAG,GAAG;AAC5D;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA,UAAU;AACV,+CAA+C,gBAAgB;AAC/D;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AChQA,CAAQ;AACR;AACA,gBAAgB,aAAa,QAAQ,4UAAmE;AACxG,eAAe,CAAC;AAChB;AACA;AACA;AACA,SAAS;AACT,MAAM;AACN;AACA;AACA;AACA;AACA;AACO;AACP;AACA,gBAAgB,8CAA8C,QAAQ,8TAAmD;AACzH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACO;AACP;AACA,gBAAgB,WAAW,QAAQ,8TAAgE;AACnG;AACA,qGAAqG,eAAe;AACpH;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACO;AACP;AACA,gBAAgB,QAAQ,QAAQ,2TAA6D;AAC7F;AACA,sFAAsF,eAAe;AACrG;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACO;AACP;AACA,gBAAgB,aAAa,QAAQ,kVAAkE;AACvG;AACA;AACA;AACA,uBAAuB,CAAC;AACxB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,uBAAuB,CAAC;AACxB;AACA;AACA;AACA,iBAAiB;AACjB;AACA,MAAM;AACN;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACxFA,CAAwC;AACxC;AAC0D;AACC;AACT;AACmB;AAC1C;AAC3B;;;;;;;;;;;;;;;;;;ACPA,CAAwD;AACmE;AACvB;AACzE;AAC3B;AACA;AACA,0BAA0B,qEAAmB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,uEAAqB;AAC3C,yBAAyB,0EAAwB;AACjD;AACA;AACA,QAAQ,CAAC;AACT;AACA,gBAAgB,CAAC;AACjB;AACA,yCAAyC,qDAAe;AACxD;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,QAAQ,CAAC;AACT;AACA,2BAA2B,CAAC;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,CAAC;AAC7B;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,CAAC;AACT;AACA,gBAAgB,CAAC;AACjB;AACA,qCAAqC,kDAAY;AACjD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ,CAAC;AACT;AACA,gBAAgB,CAAC;AACjB;AACA,wCAAwC,qDAAe;AACvD;AACA,SAAS;AACT,QAAQ,CAAC;AACT;AACA,gBAAgB,CAAC;AACjB;AACA,sCAAsC,iDAAW;AACjD;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gEAAgE,GAAG;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,wBAAwB;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,oDAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF,gBAAgB;AACrG,KAAK;AACL,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,qBAAqB,yDAAa;AAClC;AACA;AACA;AACA,gDAAgD,WAAW;AAC3D;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,IAAI,sDAAU,sCAAsC,WAAW;AAC/D,CAAC;AACD;AACA;AACA;AACA,gBAAgB,oBAAoB,QAAQ,qUAAgE;AAC5G;AACA;AACA;AACA;AACA,kBAAkB,eAAe,IAAI,kBAAkB,IAAI,gBAAgB,IAAI,kBAAkB;AACjG;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE,yEAAyE;AACzE,0EAA0E;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE,yEAAyE;AACzE,0EAA0E;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,oCAAoC,CAAC;AACrC;AACA;AACA,SAAS;AACT;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,+BAA+B,QAAQ,mZAA4E;AACnI;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,yBAAyB,QAAQ,2XAAgE;AACjH;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iCAAiC,QAAQ,mUAAgF;AACzI;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,kEAAgB;AAC9C;AACA;AACA,KAAK;AACL;;;;;;;;;;;;;;;;;ACxRA,CAAQ;AACR;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACO;AACP,+BAA+B;AAC/B;AACA;AACO;AACP;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;;;;;;;;;;;ACzBA;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA","sources":["webpack://thebudgeteer/../../../../../../C\u0000#/GithubRepositories/CodeReviews.MVC.Budget/MVC.Budget.K-MYR/MVC.Budget.K-MYR/ClientApp/src/js/api.js","webpack://thebudgeteer/../../../../../../C\u0000#/GithubRepositories/CodeReviews.MVC.Budget/MVC.Budget.K-MYR/MVC.Budget.K-MYR/ClientApp/src/js/asyncComponents.js","webpack://thebudgeteer/../../../../../../C\u0000#/GithubRepositories/CodeReviews.MVC.Budget/MVC.Budget.K-MYR/MVC.Budget.K-MYR/ClientApp/src/js/fiscalPlan-entry.js","webpack://thebudgeteer/../../../../../../C\u0000#/GithubRepositories/CodeReviews.MVC.Budget/MVC.Budget.K-MYR/MVC.Budget.K-MYR/ClientApp/src/js/fiscalPlan.js","webpack://thebudgeteer/../../../../../../C\u0000#/GithubRepositories/CodeReviews.MVC.Budget/MVC.Budget.K-MYR/MVC.Budget.K-MYR/ClientApp/src/js/utilities.js","webpack://thebudgeteer/../../../../../../C\u0000#/GithubRepositories/CodeReviews.MVC.Budget/MVC.Budget.K-MYR/MVC.Budget.K-MYR/ClientApp/node_modules/bootstrap-datepicker/dist/css/bootstrap-datepicker3.min.css","webpack://thebudgeteer/../../../../../../C\u0000#/GithubRepositories/CodeReviews.MVC.Budget/MVC.Budget.K-MYR/MVC.Budget.K-MYR/ClientApp/node_modules/datatables.net-bs5/css/dataTables.bootstrap5.css","webpack://thebudgeteer/../../../../../../C\u0000#/GithubRepositories/CodeReviews.MVC.Budget/MVC.Budget.K-MYR/MVC.Budget.K-MYR/ClientApp/src/scss/site.scss"],"sourcesContent":["ï»¿const incomeCategoriesAPI = \"https://localhost:7246/api/IncomeCategories\";\r\nconst expenseCategoriesAPI = \"https://localhost:7246/api/ExpenseCategories\";\r\nconst transactionsAPI = \"https://localhost:7246/api/Transactions\";\r\nconst fiscalPlanAPI = \"https://localhost:7246/api/FiscalPlan\";\r\n\r\nexport async function getFiscalPlanDataByMonth(id, date) {\r\n    try {\r\n        var response = await fetch(`${fiscalPlanAPI}/${id}/Month?Month=${date.toISOString() ?? new Date().toISOString()}`, {\r\n            method: \"GET\",\r\n        });\r\n\r\n        if (response.ok) {\r\n            return await response.json();\r\n        } else {\r\n            console.error(`HTTP GET Error: ${response.status}`);\r\n            return null;\r\n        }\r\n    } catch (error) {\r\n        console.error(error);\r\n        return null;\r\n    }\r\n}\r\n\r\nexport async function getFiscalPlanDataByYear(id, year) {\r\n    try {\r\n        var response = await fetch(`${fiscalPlanAPI}/${id}/${year.getFullYear()}`, {\r\n            method: \"GET\"\r\n        });\r\n\r\n        if (response.ok) {\r\n            return await response.json();\r\n        } else {\r\n            console.error(`HTTP GET Error: ${response.status}`);\r\n            return null;\r\n        }\r\n    } catch (error) {\r\n        console.error(error);\r\n        return null;\r\n    }\r\n}\r\n\r\nexport async function postTransaction(formData) {\r\n    try {\r\n        var response = await fetch(`${transactionsAPI}`, {\r\n           method: \"POST\",\r\n           headers: {\r\n               \"Content-Type\": \"application/json\",\r\n               \"RequestVerificationToken\": formData.get('__RequestVerificationToken')\r\n           },\r\n           body: JSON.stringify({\r\n               Title: formData.get(\"Title\"),\r\n               Amount: parseFloat(formData.get(\"Amount\")),\r\n               DateTime: formData.get(\"DateTime\"),\r\n               IsHappy: formData.get(\"IsHappy\") === \"true\" ? true : false,\r\n               IsNecessary: formData.get(\"IsNecessary\") === \"true\" ? true : false,\r\n               CategoryId: parseInt(formData.get(\"CategoryId\"))\r\n           })\r\n        });\r\n\r\n        if (response.ok) {\r\n            return await response.json();\r\n        } else {\r\n            console.error(`HTTP Post Error: ${response.status}`);\r\n            return null;\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        return null;\r\n    }\r\n}\r\n\r\nexport async function postCategory(formData) {\r\n    try {\r\n        var response = await fetch(`${formData.get(\"type\") == 1 ? incomeCategoriesAPI : expenseCategoriesAPI}`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"RequestVerificationToken\": formData.get('__RequestVerificationToken')\r\n            },\r\n            body: JSON.stringify({\r\n                Name: formData.get(\"Name\"),\r\n                Budget: parseFloat(formData.get(\"Budget\")),\r\n                FiscalPlanId: parseInt(formData.get(\"FiscalPlanId\"))\r\n            })\r\n        });\r\n\r\n        if (response.ok) {\r\n            return await response.json();\r\n        } else {\r\n            console.error(`HTTP Post Error: ${response.status}`);\r\n            return null;\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        return null;\r\n    }\r\n}\r\n\r\nexport async function putCategory(formData) {\r\n    try {\r\n        var id = parseInt(formData.get(\"Id\"));\r\n        let queryParams = new URLSearchParams({\r\n            Month: homeMonthPicker.datepicker('getUTCDate').toISOString()\r\n        });\r\n        var response = await fetch(`${formData.get(\"type\") == 1 ? incomeCategoriesAPI : expenseCategoriesAPI}/${id}?${queryParams}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"RequestVerificationToken\": formData.get('__RequestVerificationToken')\r\n            },\r\n            body: JSON.stringify({\r\n                Name: formData.get(\"Name\"),\r\n                Budget: parseFloat(formData.get(\"Budget\")),\r\n                GroupId: parseInt(formData.get(\"GroupId\")),\r\n                Id: id,\r\n                FiscalPlanId: parseInt(fiscalPlanId.value)\r\n            })\r\n        });\r\n\r\n        if (response.ok) {\r\n            return true;\r\n        } else {\r\n            console.error(`HTTP Post Error: ${response.status}`);\r\n            return false;\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        return false;\r\n    }\r\n}\r\n\r\nexport async function deleteCategory(id, type, token) {\r\n    try {\r\n        var response = await fetch(`${type == 1 ? incomeCategoriesAPI : expenseCategoriesAPI}/${id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"RequestVerificationToken\": token\r\n            }\r\n        });\r\n\r\n        if (response.ok) {\r\n            return true;\r\n        } else {\r\n            console.error(`HTTP Delete Error: ${response.status}`);\r\n            return false;\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        return false;\r\n    }\r\n}\r\n\r\nexport async function getTransactions(formData) {\r\n    try {\r\n        var params = new URLSearchParams();\r\n\r\n        for (let [key, value] of formData.entries()) {\r\n            if (value !== undefined && value !== '') {\r\n                params.append(key, value);\r\n            }\r\n        }\r\n\r\n        var query_string = params.toString();\r\n\r\n        var response = await fetch(`${transactionsAPI}?${query_string}`, {\r\n            method: \"GET\",\r\n        });\r\n\r\n        if (response.ok) {\r\n            return await response.json();\r\n        } else {\r\n            console.error(`HTTP GET Error: ${response.status}`);\r\n            return null;\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        return null;\r\n    }\r\n}\r\n\r\nexport async function getCategoriesWithUnevaluatedTransactions(id) {\r\n    try {\r\n        var queryParams = new URLSearchParams({\r\n            FiscalPlanId: id\r\n        });\r\n        var response = await fetch(`${expenseCategoriesAPI}/filteredByEvaluation?${queryParams}`, {\r\n            method: \"GET\"\r\n        });\r\n\r\n        if (response.ok) {\r\n            return await response.json();\r\n        } else {\r\n            console.error(`HTTP GET Error: ${response.status}`);\r\n            return null;\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        return null;\r\n    };\r\n}\r\n\r\nexport async function patchTransactionEvaluation(formData, previousIsHappy, previousIsNecessary) {\r\n    try {\r\n        var id = parseInt(formData.get(\"Id\"));\r\n\r\n        var patchDoc =\r\n            [{\r\n                op: \"replace\",\r\n                path: \"/IsHappy\",\r\n                value: formData.get(\"IsHappy\") === \"true\"\r\n            },\r\n            {\r\n                op: \"replace\",\r\n                path: \"/IsNecessary\",\r\n                value: formData.get(\"IsNecessary\") === \"true\"\r\n            }, {\r\n                op: \"replace\",\r\n                path: \"/PreviousIsHappy\",\r\n                value: previousIsHappy\r\n            },\r\n            {\r\n                op: \"replace\",\r\n                path: \"/PreviousIsNecessary\",\r\n                value: previousIsNecessary\r\n            },\r\n            {\r\n                op: \"replace\",\r\n                path: \"/Evaluated\",\r\n                value: true\r\n            }];\r\n\r\n        var response = await fetch(`${transactionsAPI}/${id}`, {\r\n            method: \"PATCH\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json-patch+json\"\r\n            },\r\n            body: JSON.stringify(patchDoc)\r\n        });\r\n\r\n        if (response.ok) {\r\n            return true;\r\n        } else {\r\n            console.error(`HTTP Patch Error: ${response.status}`);\r\n            return false;\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        return false;\r\n    };\r\n}","ï»¿export async function getCountrySelect(id) {\r\n    try {\r\n        const { default: _ } = await import(/* webpackChunkName: \"countrySelect\" */ 'country-select-js');\r\n        return $(id).countrySelect({\r\n            defaultCountry: window.userLocale.region.toLowerCase(),\r\n            preferredCountries: [\"at\", \"us\"],\r\n            responsiveDropdown: true\r\n        });\r\n    } catch (error) {\r\n        console.error('Error loading Country Select:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function importChartDefaults() {\r\n    try {\r\n        const { Chart, LinearScale, Legend, Tooltip, Colors } = await import(/* webpackChunkName: \"chartJS\" */'chart.js');\r\n\r\n        Chart.register(\r\n            LinearScale, Legend, Tooltip, Colors,\r\n            {\r\n                id: \"emptypiechart\",\r\n                beforeInit: function (chart) {\r\n                    chart.data.datasets[0].backgroundColor.push('#d2dee2');\r\n                    chart.data.datasets[0].data.push(Number.MIN_VALUE);\r\n                }\r\n            }\r\n        );\r\n\r\n        Chart.defaults.color = '#ffffff';\r\n        Chart.defaults.scales.linear.min = 0;\r\n        Chart.defaults.plugins.legend.labels.filter = (item) => item.text !== undefined;\r\n        Chart.defaults.plugins.tooltip.filter = (item) => item.label !== \"\"; \r\n    } catch (error) {\r\n        console.error('Error loading Chart.js defaults:', error);\r\n        throw error; \r\n    }\r\n}\r\n\r\nexport async function importBootstrapCollapses() {\r\n    try {\r\n        const { Collapse } = await import(/* webpackChunkName: \"bootstrap-collapses\" */'bootstrap');\r\n        let collapseElements = document.querySelectorAll('.collapse')\r\n        let collapses = [...collapseElements].map(collapseElement => new Collapse(collapseElement, { toggle: false }))\r\n\r\n        return collapses;\r\n    } catch (error) {\r\n        console.error('Error loading Bootstrap modals:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function importBootstrapModals() {\r\n    try {\r\n        const { Modal } = await import(/* webpackChunkName: \"bootstrap-modals\" */'bootstrap');\r\n        let modalElements = document.querySelectorAll('.modal')\r\n        let modals = [...modalElements].map(modalElement => new Modal(modalElement, { toggle: false }))\r\n\r\n        return modals;\r\n    } catch (error) {\r\n        console.error('Error loading Bootstrap modals:', error);\r\n        throw error; \r\n    }\r\n}\r\n\r\nexport async function getDatePicker(id, mode) {\r\n    try {\r\n        const { default: _ } = await import(/* webpackChunkName: \"datepicker\" */'bootstrap-datepicker');\r\n\r\n        switch (mode) {\r\n            case \"month\":\r\n                return $(id).datepicker({\r\n                    format: 'MM yyyy',\r\n                    startView: 'months',\r\n                    minViewMode: 'months',\r\n                    autoclose: true\r\n                })\r\n            default:\r\n                return $(id).datepicker({\r\n                    format: 'yyyy',\r\n                    minViewMode: 'years',\r\n                    autoclose: true\r\n                });\r\n        }\r\n    } catch (error) {\r\n        console.error('Error loading Datepicker:', error);\r\n        throw error; \r\n    }    \r\n}","ï»¿import 'jquery-validation-unobtrusive';\r\n\r\nimport 'datatables.net-bs5/css/dataTables.bootstrap5.css';\r\nimport 'country-select-js/build/css/countrySelect.min.css';\r\nimport 'bootstrap-icons/font/bootstrap-icons.css';\r\nimport 'bootstrap-datepicker/dist/css/bootstrap-datepicker3.min.css';\r\nimport '../scss/site.scss';\r\n\r\nimport './fiscalPlan';","ï»¿import { shortestAngle, resetStyle} from './utilities';\r\nimport { getCountrySelect, importChartDefaults, importBootstrapModals, importBootstrapCollapses } from './asyncComponents';\r\nimport { postTransaction, getTransactions, postCategory, putCategory, deleteCategory } from './api';\r\nimport 'jquery-validation';\r\n\r\nconst currentDate = new Date();\r\nconst chartDefaultsTask = importChartDefaults();\r\n\r\nconst fiscalPlanId = document.getElementById(\"fiscalPlan_Id\");\r\nconst menu = document.getElementById('menu-container');\r\n\r\nconst addCategoryModalType = document.getElementById(\"addCategory_type\");\r\nconst addCategoryFiscalPlanId = document.getElementById(\"addCategory_fiscalPlanId\");\r\nconst updateCategoryModalLabel = document.getElementById(\"updateCategory-label\");\r\nconst updateCategoryModalId = document.getElementById(\"updateCategory_id\");\r\nconst updateCategoryModalName = document.getElementById(\"updateCategory_name\");\r\nconst updateCategoryModalBudget = document.getElementById(\"updateCategory_budget\");\r\nconst updateCategoryModalType = document.getElementById(\"updateCategory_type\");\r\nconst addTransactionModalCategoryId = document.getElementById(\"addTransaction_categoryId\");\r\nconst flipContainer = document.getElementById(\"flip-container-inner\");\r\n\r\nconst homeDashboardPromise = getHomeDashboard(menu, fiscalPlanId.value, currentDate);\r\nconst statisticsDashboardPromise = getStatisticsDashboard(fiscalPlanId.value, currentDate);\r\nconst reevaluationDashboardPromise = getReevaluationDashboard(fiscalPlanId.value);\r\nconst countrySelectPromise = initializeCountrySelect();\r\nconst modalsPromise = importBootstrapModals();\r\nconst collapsesPromise = importBootstrapCollapses();\r\nconst transactionsTablePromise = getTransactionsTable()\r\n    .then(() => {\r\n        $('#search-form').on(\"submit\", async function (event) {\r\n            event.preventDefault();\r\n            if ($(this).valid()) {\r\n                let table = await transactionsTable;\r\n                let transactions = await getTransactions(new FormData(this));\r\n                table.clear();\r\n                table.rows.add(transactions);\r\n                table.draw();\r\n            }\r\n        });\r\n    });\r\nPromise.all([collapsesPromise, modalsPromise])\r\n    .then(([collapses, modals]) => {\r\n        let addCategoryModal = modals.find(m => m._element.id == \"addCategory-modal\");\r\n        $(\".accordion-head\").on(\"click\", function (event) {\r\n            if (event.target.closest(\"svg.add-icon\")) {\r\n                let type = $(this).closest('.accordion')[0].dataset.type;\r\n                addCategoryModalType.value = type;\r\n                addCategoryFiscalPlanId.value = fiscalPlanId.value;\r\n                addCategoryModal.show();\r\n            }\r\n\r\n            else {\r\n                collapses.find(c => c._element.id == this.nextElementSibling.id).toggle();\r\n                let caret = $('.accordion-caret', this)[0];\r\n                caret.classList.toggle(\"rotate\");\r\n            }\r\n        });\r\n    });\r\n\r\nPromise.all([modalsPromise, homeDashboardPromise])\r\n    .then(([modals, homeDashboard]) => {\r\n        let addCategoryModal = modals.find(m => m._element.id == \"addCategory-modal\");\r\n        let addTransactionModal = modals.find(m => m._element.id == \"addTransaction-modal\");\r\n        let updateCategoryModal = modals.find(m => m._element.id == \"updateCategory-modal\");\r\n\r\n        $('#add-category-form').on(\"submit\", async function (event) {\r\n            event.preventDefault();\r\n            if ($(this).valid()) {\r\n                addCategoryModal.hide();\r\n                let category = await postCategory(new FormData(this));\r\n\r\n                if (category) {\r\n                    homeDashboard.addCategory(category);\r\n                }\r\n            }\r\n        });\r\n        $('#add-transaction-form').on(\"submit\", async function (event) {\r\n            event.preventDefault();\r\n            if ($(this).valid()) {\r\n                addTransactionModal.hide();\r\n                let transaction = await postTransaction(new FormData(this));\r\n            }\r\n        });\r\n        $('#update-category-form').on(\"submit\", async function (event) {\r\n            event.preventDefault();\r\n            if ($(this).valid()) {\r\n                updateCategoryModal.hide();\r\n                let isUpdated = await putCategory(new FormData(this));\r\n            }\r\n        });\r\n\r\n        document.getElementById('close-menu').onclick = function () {\r\n            menu.classList.remove('active');\r\n            var id = menu.dataset.categoryid;\r\n            var borderBox = document.getElementById(`category_${id}`).querySelector('.border-animation');\r\n            borderBox.classList.remove('border-rotate');\r\n            menu.dataset.categoryid = 0;\r\n        }\r\n        document.getElementById('add-menu').onclick = async function () {\r\n            addTransactionModalCategoryId.value = menu.dataset.categoryid;\r\n            addTransactionModal.show();\r\n        }\r\n        document.getElementById('edit-menu').onclick = function () {\r\n            var category = document.getElementById(`category_${menu.dataset.categoryid}`);\r\n\r\n            updateCategoryModalLabel.textContent = category.dataset.name;\r\n            updateCategoryModalId.value = category.dataset.id;\r\n            updateCategoryModalName.value = category.dataset.name;\r\n            updateCategoryModalBudget.value = category.dataset.budget;\r\n            updateCategoryModalType.value = category.dataset.type;\r\n\r\n            updateCategoryModal.show();\r\n        }\r\n        document.getElementById('delete-menu').onclick = function () {\r\n            var token = menu.querySelector('input').value;\r\n            var id = menu.dataset.categoryid;\r\n            var type = parseInt(menu.dataset.type);\r\n            var isDeleted = deleteCategory(id, type, token)\r\n            if (isDeleted) {\r\n                homeDashboard.removeCategory(id, type);\r\n                menu.classList.remove('active');\r\n                menu.dataset.categoryid = 0;\r\n            }\r\n        }\r\n        document.getElementById('details-menu').onclick = function () {\r\n            var id = menu.dataset.categoryid;\r\n            window.location.href = \"Category/\" + id;\r\n        }\r\n    });\r\n\r\nvar currentSideIndex = 0;\r\nvar currentDeg = 0;\r\n\r\nlet elements = document.querySelectorAll('.flip-content');\r\nlet observer = new ResizeObserver(entries => {\r\n    entries.forEach(entry => {\r\n        let width = entry.contentRect.width;\r\n        let translateZValue = (width / 2);\r\n\r\n        entry.target.style.transform = `rotateY(calc(90deg * var(--s))) translateZ(${translateZValue}px)`;\r\n    });\r\n});\r\nelements.forEach(element => {\r\n    observer.observe(element);\r\n});\r\n\r\n\r\n\r\n$('#action-sidebar').on(\"click\", '.sidebar-button-container', async function (event) {\r\n    if (currentSideIndex === this.dataset.index) {\r\n        return;\r\n    }\r\n\r\n    var degreeDiff = shortestAngle(currentSideIndex, this.dataset.index);\r\n\r\n    currentDeg += degreeDiff;\r\n\r\n    flipContainer.style = `transform: rotateY(${currentDeg}deg)`;\r\n\r\n    currentSideIndex = this.dataset.index;\r\n});\r\n\r\nflipContainer.addEventListener(\"transitionend\", () => {\r\n\r\n    currentDeg = currentDeg % 360;\r\n    resetStyle(flipContainer, `transform: rotateY(${currentDeg}deg)`);\r\n});\r\n\r\nasync function getTransactionsTable() {\r\n    try {\r\n        const { default: DataTable} = await import(/* webpackChunkName: \"datatables\" */'datatables.net-bs5');\r\n        let dataTable = new DataTable('#transactions-table', {\r\n            info: false,\r\n            dom: '<\"pb-1\" t<\"d-flex justify-content-between mt-3\"<\"pt-1\"l>p>>',\r\n            columns: [\r\n                { data: 'title' }, { data: 'dateTime' }, { data: 'amount' }, { data: 'category' }, {\r\n                    data: null,\r\n                    defaultContent:\r\n                    `<svg  width='20' height='20' fill='rgba(255, 255, 255, 1)' class='me-2 table-icon' viewBox='0 0 16 16'>\r\n                        <defs>\r\n                        <linearGradient id=\"icon_gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\r\n                            <stop offset=\"0%\" style=\"stop-color:#CCFBE5;stop-opacity:1\" />\r\n                            <stop offset=\"50%\" style=\"stop-color:#A2D6CB;stop-opacity:1\" />\r\n                            <stop offset=\"100%\" style=\"stop-color:#7EB1B1;stop-opacity:1\" />\r\n                        </linearGradient>\r\n                    </defs>\r\n                        <path d='M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z'/>\r\n                        <path fill-rule=\"evenodd\" d='M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5z'>\r\n                    </svg >\r\n                    <svg width=\"20\" height=\"20\" fill=\"rgba(255, 255, 255, 1)\" viewBox=\"0 0 16 16\" class=\"table-icon\">\r\n                    <defs>\r\n                        <linearGradient id=\"icon_gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\r\n                            <stop offset=\"0%\" style=\"stop-color:#CCFBE5;stop-opacity:1\" />\r\n                            <stop offset=\"50%\" style=\"stop-color:#A2D6CB;stop-opacity:1\" />\r\n                            <stop offset=\"100%\" style=\"stop-color:#7EB1B1;stop-opacity:1\" />\r\n                        </linearGradient>\r\n                    </defs>\r\n                      <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0z\"/>\r\n                      <path d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4zM2.5 3h11V2h-11z\"/>\r\n                    </svg>`,\r\n                    targets: -1,\r\n                    sortable: false\r\n                },\r\n            ],\r\n            columnDefs: [{\r\n                targets: 2,\r\n                render: function (data, type, row) {\r\n                    if (type === 'display') {\r\n                        return window.userNumberFormat.format(data);\r\n                    } else {\r\n                        return data;\r\n                    }\r\n                }\r\n            }, {\r\n                targets: 1,\r\n                render: function (data, type, row) {\r\n                    if (type === 'display') {\r\n                        return new Date(data).toLocaleString(window.userLocale);\r\n                    } else {\r\n                        return data;\r\n                    }\r\n                }\r\n            }],\r\n            scrollX: true,\r\n            scrollCollapse: true\r\n        });\r\n        dataTable.on('click', 'svg', function () {\r\n            var row = dataTable.row($(this).parents('tr'));\r\n            var data = row.data();\r\n            console.log(data);\r\n        });\r\n        return dataTable;\r\n    } catch (error) {\r\n        console.error('Error loading Datatable:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nasync function getStatisticsDashboard(id, date) {\r\n    try {\r\n        await chartDefaultsTask;\r\n        const { default: StatisticsDashboard } = await import(/* webpackChunkName: \"statisticsDashboard\" */'./statisticsDashboard');\r\n\r\n        return new StatisticsDashboard(id, date);\r\n    } catch (error) {\r\n        console.error('Error loading statistics dashboard:', error);\r\n        throw error;\r\n    }    \r\n}\r\n\r\nasync function getHomeDashboard(menu, id, date) {\r\n    try {\r\n        await chartDefaultsTask;\r\n        const { default: HomeDashboard } = await import(/* webpackChunkName: \"homeDashboard\" */'./homeDashboard');\r\n\r\n        return new HomeDashboard(menu, id, date);\r\n\r\n    } catch (error) {\r\n        console.error('Error loading home dashboard:', error);\r\n        throw error;\r\n    }\r\n} \r\n\r\nasync function getReevaluationDashboard(id) {\r\n    try {\r\n        const { default: ReevaluationDashboard } = await import(/* webpackChunkName: \"reevaluationDashboard\" */'./reevaluationDashboard');\r\n\r\n        return new ReevaluationDashboard(id);\r\n    } catch (error) {\r\n        console.error('Error loading reevaluation dashboard:', error);\r\n        throw error;\r\n    }\r\n    \r\n} \r\n\r\nasync function initializeCountrySelect() {\r\n    let countrySelect = await getCountrySelect(\"#country\");\r\n    countrySelect.on('change', () => {\r\n        let iso2Code = countrySelect.countrySelect(\"getSelectedCountryData\").iso2;       \r\n    });\r\n}\r\n","ï»¿export function shortestAngle(index1, index2) {\r\n    var diff = (index2 - index1 + 4) % 4;\r\n\r\n    if (diff === 1) {\r\n        return -90;\r\n    } else if (diff === 2) {\r\n        return -180;\r\n    } else if (diff === 3) {\r\n        return 90;\r\n    } else {\r\n        return 0;\r\n    }\r\n}\r\n\r\nexport function resetStyle(element, style) {\r\n    element.style = style + '; transition: transform 0s';\r\n}\r\n\r\nexport function getRandomColor() {\r\n    var letters = '0123456789ABCDEF';\r\n    var color = '#';\r\n    for (var i = 0; i < 6; i++) {\r\n        color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};"],"names":[],"sourceRoot":""}