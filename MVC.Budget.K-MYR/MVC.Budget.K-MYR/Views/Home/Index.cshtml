@using System.Globalization
@model MVC.Budget.K_MYR.Models.HomeViewModel;

@{
    ViewData["Title"] = "Home Page";
    var expensesTotal = Model.Expenses.Sum(c => c.Transactions.Sum(t => t.Amount));
    var expensesBudget = Model.Expenses.Sum(c => c.Budget);
    var happyExpenses = Model.Expenses.Sum(c => c.Transactions.Where(t => t.IsHappy).Sum(t => t.Amount));
    var necessaryExpenses = Model.Expenses.Sum(c => c.Transactions.Where(t => t.IsNecessary).Sum(t => t.Amount));

    var incomeTotal = Model.Income.Sum(c => c.Transactions.Sum(t => t.Amount));
    var incomeBudget = Model.Income.Sum(c => c.Budget);

    var Overspending = Model.Expenses.Sum(c => Math.Max(0, c.Transactions.Sum(t => t.Amount) - c.Budget));
}

<section>
    <div id="sidebar" class="sidebar collapsed">
        <svg id="sidebar-caret" class="sidebar-caret" width="30" height="35" fill="#ffffff" viewBox="0 0 15 15">
            <path d="M3.204 5h9.592L8 10.481zm-.753.659 4.796 5.48a1 1 0 0 0 1.506 0l4.796-5.48c.566-.647.106-1.659-.753-1.659H3.204a1 1 0 0 0-.753 1.659" />
        </svg>
        <div id="sidebar-container" class="sidebar-container">
            <div class="sidebar-category">
                <h5>Budget</h5>
                <ul>
                    <li>Add New Budget</li>
                    <li>Edit Budget</li>
                    <li>Delete Budget</li>
                </ul>
                <h5>Categories</h5>
                <ul>
                    <li data-bs-toggle="modal" data-bs-target="#add-category-modal">Add New Category</li>
                    <li>Edit Category</li>
                    <li>Delete Category</li>
                </ul>
                <h5>Display</h5>
                <ul>
                    <li>Locale</li>
                    <li>Currency</li>
                    <li>Other Settings</li>
                </ul>
            </div>
        </div>
    </div>
</section>

<section>
    <div id="menu-container" data-category="0">
        <div id="menu" class="menu">
            @Html.AntiForgeryToken()
            <span class="toggle" id="close-menu">
                <svg class="close" viewBox="0 0 512 512"><path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="32" d="M368 368L144 144M368 144L144 368" /></svg>
            </span>
            <span id="details-menu" class="span-box" style="--i:0">
                <svg class="details" viewBox="0 0 512 512"><path d="M32 32v432a16 16 0 0016 16h432" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="32" /><rect x="96" y="224" width="80" height="192" rx="20" ry="20" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="32" /><rect x="240" y="176" width="80" height="240" rx="20" ry="20" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="32" /><rect x="383.64" y="112" width="80" height="304" rx="20" ry="20" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="32" /></svg>
            </span>
            <span id="add-menu" class="span-box" style="--i:1">
                <svg class="plus" viewBox="0 0 512 512"><path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="32" d="M256 112v288M400 256H112" /></svg>
            </span>
            <span id="edit-menu" class="span-box" style="--i:2">
                <svg class="pen" viewBox="0 0 512 512"><path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="32" d="M364.13 125.25L87 403l-23 45 44.99-23 277.76-277.13-22.62-22.62zM420.69 68.69l-22.62 22.62 22.62 22.63 22.62-22.63a16 16 0 000-22.62h0a16 16 0 00-22.62 0z" /></svg>
            </span>
            <span id="delete-menu" class="span-box" style="--i:3">
                <svg class="trash" viewBox="0 0 512 512"><path d="M112 112l20 320c.95 18.49 14.4 32 32 32h184c17.67 0 30.87-13.51 32-32l20-320" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="32" /><path stroke="currentColor" stroke-linecap="round" stroke-miterlimit="10" stroke-width="32" d="M80 112h352" /><path d="M192 112V72h0a23.93 23.93 0 0124-24h80a23.93 23.93 0 0124 24h0v40M256 176v224M184 176l8 224M328 176l-8 224" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="32" /></svg>
            </span>
        </div>
    </div>
</section>

<section>
    <div class="dashboard border">
        <div class="dashboard-container">
            <div class="chart-container">
                <canvas id="chart" data-happy="@(happyExpenses.ToString("F2", CultureInfo.InvariantCulture))"
                        data-unhappy="@((expensesTotal - happyExpenses).ToString("F2", CultureInfo.InvariantCulture))">
                </canvas>
            </div>
            <div class="chart-container">
                <h1 class="text-center">My Budget</h1>
                <h4 class="text-center">February 2024</h4>
                <div class="statistics mt-4">
                    <h5 class="text-center">Total Overspending: @Overspending.ToString("C2") </h5>
                    <h5 class="text-center">Sentiment Turnover Rate: </h5>
                    <h5 class="text-center">Necessity Turnover Rate: </h5>
                </div>
            </div>
            <div class="chart-container">
                <canvas id="chart2" data-necessary="@(necessaryExpenses.ToString("F2", CultureInfo.InvariantCulture))"
                        data-unnecessary="@((expensesTotal - necessaryExpenses).ToString("F2", CultureInfo.InvariantCulture))">
                </canvas>
            </div>
        </div>
    </div>
</section>

<section>
    <div class="accordion my-2" id="group_1" data-id="1">
        <div class="accordion-item">
            <div id="accordion-head-income" class="accordion-head d-flex">
                <h5 class="accordion-header me-auto" id="accordionIncomeHeader">
                    Income
                </h5>
                <h5 class="accordion-header">
                    @incomeTotal.ToString("C2") / @incomeBudget.ToString("C2")
                </h5>
                <img class="add-icon ms-auto" src="~/img/svg/plus.svg" alt="" width="20px;" />
                <div class="accordion-caret rotate"></div>
            </div>
            <div id="collapseIncome" class="accordion-collapse collapse show" aria-labelledby="accordionIncomeHeader">
                <div class="accordion-body">
                    @foreach (var category in Model.Income)
                    {
                        var spent = @category.Transactions.Sum(t => t.Amount);
                        var progressbarWidth = spent / category.Budget * 100;

                        <div id="category_@category.Id" class="category" data-id="@category.Id">
                            <div class="border-container">
                                <div class="content">
                                    <div class="category-body">
                                        <div>@(category.Name)</div>
                                        <div class="ms-auto">Balance: @(spent.ToString("C2")) / @(Html.DisplayFor(m => category.Budget))</div>
                                    </div>
                                    <div class="progress">
                                        <div class="progress-bar progress-bar-striped progress-bar-animated bg-success" role="progressbar" style="width: @((int)progressbarWidth)%" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"></div>
                                    </div>
                                </div>
                                <div class="border-animation"></div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="accordion my-2" id="group_2" data-id="2">
        <div class="accordion-item">
            <div id="accordion-head-expenses" class="accordion-head d-flex">
                <h5 class="accordion-header me-auto" id="accordionExpensesHeader">
                    Expenses
                </h5>
                <h5 class="accordion-header">
                    @expensesTotal.ToString("C2") / @expensesBudget.ToString("C2")
                </h5>
                <img class="add-icon ms-auto" src="~/img/svg/plus.svg" alt="" width="20px;" />
                <div class="accordion-caret rotate"></div>
            </div>
            <div id="collapseExpenses" class="accordion-collapse collapse show" aria-labelledby="accordionExpensesHeader">
                <div class="accordion-body">
                    @foreach (var category in Model.Expenses)
                    {
                        var sumTransactions = category.Transactions.Sum(t => t.Amount);
                        var progressbarWidth = sumTransactions / category.Budget * 100;

                        var color = progressbarWidth < 50 ? "bg-success" : progressbarWidth < 85 ? "bg-warning" : "bg-danger";

                        <div id="category_@category.Id" class="category" data-id="@category.Id">
                            <div class="border-container">
                                <div class="content">
                                    <div class="category-body">
                                        <div class="me-auto">@category.Name</div>
                                        @if (sumTransactions > category.Budget)
                                        {
                                            <div class="me-3">Overspending: @((sumTransactions - category.Budget).ToString("C2"))</div>
                                        }
                                        <div>Balance: @sumTransactions.ToString("C2") / @Html.DisplayFor(m => category.Budget)</div>
                                    </div>
                                    <div class="progress">
                                        <div class="progress-bar progress-bar-striped progress-bar-animated @color" role="progressbar" style="width: @((int)progressbarWidth)%" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"></div>
                                    </div>
                                </div>
                                <div class="border-animation"></div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="accordion my-2" id="group_3" data-id="3">
        <div class="accordion-item">
            <div id="accordion-head-savings" class="accordion-head d-flex">
                <h5 class="accordion-header me-auto" id="accordionSavingsHeader">
                    Savings
                </h5>
                <h5 class="accordion-header">
                    @Model.Savings.Sum(c => c.Transactions.Sum(t => t.Amount)).ToString("C2") / @Model.Savings.Sum(c => c.Budget).ToString("C2")
                </h5>
                <img class="add-icon ms-auto" src="~/img/svg/plus.svg" alt="" width="20px;" />
                <div class="accordion-caret rotate"></div>
            </div>
            <div id="collapseSavings" class="accordion-collapse collapse show" aria-labelledby="accordionSavingsHeader">
                <div class="accordion-body">
                    @foreach (var category in Model.Savings)
                    {
                        var sumTransactions = category.Transactions.Sum(t => t.Amount);
                        <div id="category_@category.Id" class="category" data-id="@category.Id">
                            <div class="border-container">
                                <div class="content">
                                    <div class="category-body">
                                        <div>@category.Name</div>
                                        <div class="ms-auto">Balance: @sumTransactions.ToString("C2")  / @Html.DisplayFor(m => category.Budget)</div>
                                    </div>
                                    <div class="progress">
                                        <div class="progress-bar progress-bar-striped progress-bar-animated bg-success" role="progressbar" style="width: 50%" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"></div>
                                    </div>
                                </div>
                                <div class="border-animation"></div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</section>

@await Html.PartialAsync("_IndexModals", Model.Category)
@await Html.PartialAsync("_CategoryModals", Model.Transaction)

@section Scripts {
    @{
        <script src="~/lib/node_modules/chart.js/dist/chart.umd.js"></script>
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
        <script src="~/js/index.js" asp-append-version="true"></script>
    }
}
