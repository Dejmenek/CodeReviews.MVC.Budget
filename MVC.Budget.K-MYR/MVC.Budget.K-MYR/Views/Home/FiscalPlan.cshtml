@using System.Globalization
@model LayoutModel<FiscalPlanModel>

@section Stylesheets {
    @{
        <link rel="stylesheet" href="~/dist/styles-index~fiscalPlan.css" asp-append-version="true" />
        <link rel="stylesheet" href="~/dist/styles-fiscalPlan.css" asp-append-version="true" />
    }
}

@{
    ViewData["Title"] = "Home Page";

    var fiscalPlanDTO = Model.PageModel.FiscalPlan;
}

<div id="menu-container" data-categoryid="0">
    <div id="menu" class="menu">
        @Html.AntiForgeryToken()
        <span class="toggle" id="close-menu">
            <svg class="close" viewBox="0 0 512 512"><path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="32" d="M368 368L144 144M368 144L144 368" /></svg>
        </span>
        <span id="details-menu" class="span-box" style="--i:0">
            <svg class="details" viewBox="0 0 512 512"><path d="M32 32v432a16 16 0 0016 16h432" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="32" /><rect x="96" y="224" width="80" height="192" rx="20" ry="20" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="32" /><rect x="240" y="176" width="80" height="240" rx="20" ry="20" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="32" /><rect x="383.64" y="112" width="80" height="304" rx="20" ry="20" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="32" /></svg>
        </span>
        <span id="add-menu" class="span-box" style="--i:1">
            <svg class="plus" viewBox="0 0 512 512"><path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="32" d="M256 112v288M400 256H112" /></svg>
        </span>
        <span id="edit-menu" class="span-box" style="--i:2">
            <svg class="pen" viewBox="0 0 512 512"><path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="32" d="M364.13 125.25L87 403l-23 45 44.99-23 277.76-277.13-22.62-22.62zM420.69 68.69l-22.62 22.62 22.62 22.63 22.62-22.63a16 16 0 000-22.62h0a16 16 0 00-22.62 0z" /></svg>
        </span>
        <span id="delete-menu" class="span-box" style="--i:3">
            <svg class="trash" viewBox="0 0 512 512"><path d="M112 112l20 320c.95 18.49 14.4 32 32 32h184c17.67 0 30.87-13.51 32-32l20-320" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="32" /><path stroke="currentColor" stroke-linecap="round" stroke-miterlimit="10" stroke-width="32" d="M80 112h352" /><path d="M192 112V72h0a23.93 23.93 0 0124-24h80a23.93 23.93 0 0124 24h0v40M256 176v224M184 176l8 224M328 176l-8 224" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="32" /></svg>
        </span>
    </div>
</div>


<div class="flip-container">
    <div id="flip-container-inner" class="flip-container-inner">
        <div id="face_0" class="flip-content visible-face" style="--s:0">
            <div id="home" class="content-outer-container">
                <div id="home-scrollcontainer" class="content-scrollcontainer">
                    <div id="home-container" class="content-container">
                        <div class="dashboard">
                            <div class="dashboard-container">
                                <div class="chart-container">
                                    @{
                                        var unhappyExpenses = fiscalPlanDTO.ExpensesTotal - fiscalPlanDTO.ExpensesHappyTotal;
                                    }
                                    <canvas id="sentimentChart"></canvas>
                                </div>
                                <div class="chart-container">
                                    <h1 class="text-center">@fiscalPlanDTO.Name</h1>
                                    <div class="input-group monthPicker">
                                        <input id="home-monthSelector" type="text" class="monthSelector form-control ms-auto" value="" aria-label="Month Selection" readonly>
                                        <span class="input-group-text me-auto calendar-button"><i class="bi bi-calendar"></i></span>
                                    </div>
                                    <div class="dashboardStatistics mt-4">
                                        <h5 id="home-overspending" class="text-center">
                                            Overspending: @fiscalPlanDTO.Overspending.ToString("C2", Model.Culture) 
                                        </h5>
                                    </div>
                                </div>
                                <div class="chart-container">
                                    @{
                                        var unnecessaryExpenses = fiscalPlanDTO.ExpensesTotal - fiscalPlanDTO.ExpensesNecessaryTotal;
                                    }
                                    <canvas id="necessityChart"></canvas>
                                </div>
                            </div>
                        </div>
                        <div class="accordion my-3" id="incomeAccordion" data-type="1">
                            <div class="accordion-item">
                                <div id="accordion-head-income" class="accordion-head">
                                    <h5 class="accordion-header me-auto" id="accordionIncomeHeader">
                                        Income
                                    </h5>
                                    <h5 id="incomeBalanceHeader" class="accordion-header">
                                        @fiscalPlanDTO.IncomeTotal.ToString("C2", Model.Culture) / @fiscalPlanDTO.IncomeBudget.ToString("C2", Model.Culture)
                                    </h5>
                                    <svg class="add-category-icon" fill="none" viewBox="0 0 14 14" height="23" width="23">
                                        <g>
                                            <defs>
                                                <radialGradient id="gradient1" x1="0" x2="1" y1="0" y2="1">
                                                    <stop offset="0%" stop-color="#CCFBE5" />
                                                    <stop offset="50%" stop-color="#A2D6CB" />
                                                    <stop offset="100%" stop-color="#7EB1B1" />
                                                </radialGradient>
                                            </defs>
                                            <path fill="url(#gradient1)" fill-rule="evenodd" d="M8 1a1 1 0 0 0 -2 0v5H1a1 1 0 0 0 0 2h5v5a1 1 0 1 0 2 0V8h5a1 1 0 1 0 0 -2H8V1Z" clip-rule="evenodd" stroke-width="1"></path>
                                        </g>
                                    </svg>
                                    <div class="accordion-caret rotate"></div>
                                </div>
                                <div id="collapseIncome" class="accordion-collapse collapse show" aria-labelledby="accordionIncomeHeader">
                                    <div id="incomeAccordionBody" class="accordion-body">                                        
                                        @foreach (var category in fiscalPlanDTO.IncomeCategories)
                                        {                                            
                                            var progressbarWidth = (int)Math.Min(100, category.Total / category.Budget * 100);
                                            var budget = category.BudgetLimit?.Budget ?? category.Budget;

                                            <div id="category_@category.Id" class="category">                                                
                                                <div class="border-container">
                                                    <div class="content">
                                                        <div class="category-body">
                                                            <div class="category-body-content" id="category_@(category.Id)_name">@Html.Encode(category.Name)</div>

                                                            @if (category.Total > category.Budget)
                                                            {
                                                                <div id="category_@(category.Id)_deviation" class="category-body-content deviation">
                                                                    <span id="category_@(category.Id)_deviationText" class="deviation-text">Windfall: @((category.Total - category.Budget).ToString("C2", Model.Culture))</span>
                                                                </div>                                                                
                                                            }

                                                            <div class="category-body-content balance">
                                                                <span id="category_@(category.Id)_balance" class="balance-text">@(category.Total.ToString("C2", Model.Culture)) / @category.Budget.ToString("C2", Model.Culture)</span>
                                                            </div>
                                                        </div>
                                                        <div class="progress">
                                                            <div id="category_@(category.Id)_progressbar" class="progress-bar progress-bar-striped bg-success"
                                                                 role="progressbar" style="width: @(progressbarWidth)%" aria-valuenow="@progressbarWidth" aria-valuemin="0" aria-valuemax="100" aria-labelledby="category_@(category.Id)_balance">
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="border-animation"></div>
                                                </div>
                                            </div>
                                        }                                        
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="accordion my-2" id="expenseAccordion" data-type="2">
                            <div class="accordion-item">
                                <div id="accordion-head-expenses" class="accordion-head">
                                    <h5 class="accordion-header me-auto" id="accordionExpensesHeader">
                                        Expenses
                                    </h5>
                                    <h5 id="expensesBalanceHeader" class="accordion-header">
                                        @fiscalPlanDTO.ExpensesTotal.ToString("C2", Model.Culture) / @fiscalPlanDTO.ExpensesBudget.ToString("C2", Model.Culture)
                                    </h5>
                                    <svg class="add-category-icon" fill="none" viewBox="0 0 14 14" height="23" width="23">
                                        <g>
                                            <defs>
                                                <radialGradient id="gradient2" x1="0" x2="1" y1="0" y2="1">
                                                    <stop offset="0%" stop-color="#CCFBE5" />
                                                    <stop offset="50%" stop-color="#A2D6CB" />
                                                    <stop offset="100%" stop-color="#7EB1B1" />
                                                </radialGradient>
                                            </defs>
                                            <path fill="url(#gradient2)" fill-rule="evenodd" d="M8 1a1 1 0 0 0 -2 0v5H1a1 1 0 0 0 0 2h5v5a1 1 0 1 0 2 0V8h5a1 1 0 1 0 0 -2H8V1Z" clip-rule="evenodd" stroke-width="1"></path>
                                        </g>
                                    </svg>
                                    <div class="accordion-caret rotate"></div>
                                </div>
                                <div id="collapseExpenses" class="accordion-collapse collapse show" aria-labelledby="accordionExpensesHeader">
                                    <div id="expensesAccordionBody" class="accordion-body">                                        
                                        @foreach (var category in fiscalPlanDTO.ExpenseCategories)
                                        {
                                            var progressbarWidth = (int)Math.Min(100, category.Total / category.Budget * 100);
                                            var color = progressbarWidth < 50 ? "bg-success" : progressbarWidth < 85 ? "bg-warning" : "bg-danger";
                                            var budget = category.BudgetLimit?.Budget ?? category.Budget;

                                            <div id="category_@category.Id" class="category">
                                                <div class="border-container">
                                                    <div class="content">
                                                        <div class="category-body">
                                                            <div id="category_@(category.Id)_name" class="category-body-content">@Html.Encode(category.Name)</div>
                                                          
                                                            @if (category.Total > category.Budget)
                                                            {
                                                                <div id="category_@(category.Id)_deviation" class="category-body-content deviation">
                                                                    <span id="category_@(category.Id)_deviationText" class="overspending-text">Overspending: @((category.Total - category.Budget).ToString("C2", Model.Culture))</span>
                                                                </div>
                                                            }
                                                            <div class="category-body-content balance">
                                                                <span id="category_@(category.Id)_balance" class="balance-text">@category.Total.ToString("C2", Model.Culture) / @category.Budget.ToString("C2", Model.Culture)</span>
                                                            </div>
                                                        </div>
                                                        <div class="progress">
                                                            <div id="category_@(category.Id)_progressbar" class="progress-bar progress-bar-striped @color"
                                                                 role="progressbar" style="width: @(progressbarWidth)%" aria-valuenow="@(progressbarWidth)" aria-valuemin="0" aria-valuemax="100" aria-labelledby="category_@(category.Id)_balance">
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="border-animation"></div>
                                                </div>
                                            </div>
                                        }                                        
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div id="face_1" class="flip-content" style="--s:1">
            <div id="reevaluation" class="content-outer-container">
                <div id="reevalInfo">
                    <h2 id="reevalInfoText">You have reevaluated all of your previous expenses. Good job!</h2>
                </div>
                <div id="reevalCategories-scrollcontainer" class="content-scrollcontainer">
                    <div id="reevalCategories-container" class="content-container">                      
                    </div>
                </div>
            </div>
        </div>
        <div id="face_2" class="flip-content" style="--s:2">
            <div id="statistics" class="content-outer-container">
                <div id="statistics-scrollcontainer" class="content-scrollcontainer">
                    <div id="statistics-container" class="content-container">
                        <div class="dashboard">
                            <div class="dashboard-container">
                                <div class="chart-container">
                                    <canvas id="sentimentChartYear">
                                    </canvas>
                                </div>
                                <div class="chart-container">
                                    <h1 class="text-center">My Budget</h1>
                                    <div class="input-group yearPicker">
                                        <input id="statistics-yearSelector" type="text" class="yearSelector form-control ms-auto" value="" aria-label="Year Selection" readonly>
                                        <span class="input-group-text me-auto calendar-button"><i class="bi bi-calendar"></i></span>
                                    </div>
                                    <div class="dashboardStatistics mt-4">
                                        <h5 id="statistics-overspending" class="text-center">Overspending: @fiscalPlanDTO.Overspending.ToString("C2", Model.Culture) </h5>
                                    </div>
                                </div>
                                <div class="chart-container">
                                    <canvas id="necessityChartYear">
                                    </canvas>
                                </div>
                            </div>
                        </div>
                        <div class="Charts-container">
                            <div class="lineChart-container">
                                <canvas id="sentimentLineChartYear"></canvas>
                            </div>
                        </div>
                        <div class="Charts-container">
                            <div class="lineChart-container">
                                <canvas id="necessityLineChartYear"></canvas>
                            </div>
                        </div>
                        <div class="Charts-container">
                            <div class="overspendingChart-container">
                                <canvas id="overspendingChart"></canvas>
                            </div>
                        </div>
                        <div class="Charts-container">
                            <div class="lineChart-container">
                                <canvas id="totalSpentChart"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div id="face_3" class="flip-content" style="--s:3">
            <div id="search" class="content-outer-container">
                <div id="search-scrollcontainer" class="content-scrollcontainer">
                    <div id="search-container" class="content-container">
                        <div class="filter-container">
                            @await Html.PartialAsync("_SearchForm", Model.PageModel.Search)
                        </div>
                        <div class="filter-container mt-3">
                            <table class="table table-hover table-borderless w-100 px-2" id="transactions-table">
                                <thead>
                                    <tr>
                                        <th>
                                            Title
                                        </th>
                                        <th>
                                            Date
                                        </th>
                                        <th>
                                            Amount
                                        </th>         
                                        <th>
                                            Category
                                        </th>
                                        <th> 
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>                                    
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@await Html.PartialAsync("_CategoryModals", Model.PageModel.Category)
@await Html.PartialAsync("_TransactionModals", Model.PageModel.Transaction)
<input id="fiscalPlan_Id" type="hidden" value="@fiscalPlanDTO.Id" data-object='@Json.Serialize(Model.PageModel.FiscalPlan)' />

@section Scripts {
    @{
        <script src="~/dist/runtime.js" asp-append-version="true"></script>
        <script src="~/dist/vendors-index~fiscalPlan.js" asp-append-version="true"></script>
        <script src="~/dist/fiscalPlan.js" asp-append-version="true"></script>
    }
}
